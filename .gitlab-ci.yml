stages:
 - build
 - test
 - clean-up test
 - deploy

variables:
  DOCKER_DIND_IMAGE: "docker:19.03.12-dind"
  DOCKER_IMAGE: "docker:19.03.12"
  DOCKER_BUILDKIT: 1
  DOCKER_CLI_EXPERIMENTAL: enabled

build-test:
  image: $DOCKER_IMAGE
  services:
    - $DOCKER_DIND_IMAGE
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - rm .dockerignore && mv .dockerignore.prod .dockerignore
    - docker build -t ${CI_REGISTRY_IMAGE}:test --build-arg BUILD_PROD=true -f docker/Dockerfile ./
  except:
    - master

clean up test images:
  stage: clean-up test
  services:
    - $DOCKER_DIND
  image: $DOCKER_IMAGE
  allow_failure: true
  before_script:
    - apk add --no-cache curl
    - curl --fail --show-error --location "https://github.com/genuinetools/reg/releases/download/v$REG_VERSION/reg-linux-amd64" --output /usr/local/bin/reg
    - echo "$REG_SHA256  /usr/local/bin/reg" | sha256sum -c -
    - chmod a+x /usr/local/bin/reg
  script: 
    - /usr/local/bin/reg rm -d --auth-url $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $IMAGE_NAME
  variables:
    REG_SHA256: ade837fc5224acd8c34732bf54a94f579b47851cc6a7fd5899a98386b782e228
    REG_VERSION: 0.16.1
    IMAGE_NAME: ${CI_REGISTRY_IMAGE}:test
  rules:
    - when: always


build:
  image: ${DOCKER_IMAGE}
  services:
    - ${DOCKER_DIND_IMAGE}
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t ${CI_REGISTRY_IMAGE}:latest --build-arg BUILD_PROD=true -f docker/Dockerfile ./
    - docker push ${CI_REGISTRY_IMAGE}:latest
  only:
    - master

# Push the image to Docker Swarm as service and run a rolling deploy
push to production:
  image: $DOCKER_IMAGE
  stage: deploy
  variables:
    DOCKER_HOST: ssh://deploy@192.168.25.20
  image: docker:latest
  script:
    - apk add openssh --no-cache
    - mkdir -p ~/.ssh/ &&  echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - eval $(ssh-agent -s)
    - chmod 600 $SSH_KEY && ssh-add $SSH_KEY
    - docker login -u $REGISTRY_USER -p $REGISTRY_PASSWORD $CI_REGISTRY
    - docker stack deploy --prune --resolve-image=always --with-registry-auth --compose-file=docker-stack-compose.yml ${CI_PROJECT_NAMESPACE}-${CI_PROJECT_NAME}
  environment:
    name: api-bumblebee-fm
    url: https://api.bmbl.mijnproject.nu
  only:
    - master
